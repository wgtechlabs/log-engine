name: Test

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    strategy:
      matrix:
        node-version: [16.x, 18.x, 20.x]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'yarn'

    - name: Install dependencies
      run: yarn install --frozen-lockfile --prefer-offline

    - name: Run tests
      id: tests
      run: |
        # First attempt with normal configuration
        timeout 1200 yarn test:ci || {
          echo "Tests may have hung or failed, trying with safe configuration..."
          yarn test:ci:safe
        }
      timeout-minutes: 22
      env:
        NODE_OPTIONS: "--max-old-space-size=4096 --unhandled-rejections=strict"
        CI: true
        # Force Node.js to handle async operations properly
        NODE_ENV: test
        # Prevent hanging in CI environments
        FORCE_COLOR: 0

    - name: Upload coverage reports to Codecov
      if: matrix.node-version == '18.x'
      uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
