name: Test

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main ]

jobs:
  # Fast tests for dev branch - quick feedback
  test-dev:
    if: github.ref == 'refs/heads/dev' || (github.event_name == 'pull_request' && github.base_ref == 'dev')
    runs-on: ubuntu-latest
    timeout-minutes: 5  # Very fast for dev

    strategy:
      matrix:
        node-version: [18.x, 20.x]  # Reduced matrix for speed
      fail-fast: true  # Fail fast for dev branch

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'yarn'

    - name: Install dependencies
      run: yarn install --frozen-lockfile
      timeout-minutes: 2

    - name: Run fast tests
      run: yarn test:ci:fast
      timeout-minutes: 3
      env:
        NODE_OPTIONS: "--max-old-space-size=1024 --unhandled-rejections=strict"
        CI: true
        NODE_ENV: test
        FORCE_COLOR: 0

  # Comprehensive tests for main branch - full coverage
  test-main:
    if: github.ref == 'refs/heads/main' || (github.event_name == 'pull_request' && github.base_ref == 'main')
    runs-on: ubuntu-latest
    timeout-minutes: 10

    strategy:
      matrix:
        node-version: [16.x, 18.x, 20.x]  # Full matrix for main
      fail-fast: false  # Continue with other versions

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'yarn'

    - name: Install dependencies
      run: yarn install --frozen-lockfile
      timeout-minutes: 3

    - name: Run comprehensive tests
      run: yarn test:ci
      timeout-minutes: 8
      env:
        NODE_OPTIONS: "--max-old-space-size=2048 --unhandled-rejections=strict --no-deprecation"
        CI: true
        NODE_ENV: test
        FORCE_COLOR: 0
        NO_UPDATE_NOTIFIER: 1

    - name: Upload coverage reports to Codecov
      if: matrix.node-version == '18.x'
      uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
